
#include <bits/stdc++.h>
using namespace std;
using ll = long long;
 
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
 
    int t;
    cin >> t;
    while (t--)
    {
        int n, m;
        cin >> n >> m;
        vector<vector<int>> a(n, vector<int>(m));
        int mx = INT_MIN;
        for (int i = 0; i < n; ++i)
        {
            for (int j = 0; j < m; ++j)
            {
                cin >> a[i][j];
                mx = max(mx, a[i][j]);
            }
        }
        vector<int> rowCount(n, 0), colCount(m, 0);
        int tp = 0;
        for (int i = 0; i < n; ++i)
        {
            for (int j = 0; j < m; ++j)
            {
                if (a[i][j] == mx)
                {
                    rowCount[i]++;
                    colCount[j]++;
                    ++tp;
                }
            }
        }
        int maxRow = *max_element(rowCount.begin(), rowCount.end());
        int maxCol = *max_element(colCount.begin(), colCount.end());
        vector<int> rowCand, colCand;
        for (int i = 0; i < n; ++i)
            if (rowCount[i] == maxRow)
                rowCand.push_back(i);
        for (int j = 0; j < m; ++j)
            if (colCount[j] == maxCol)
                colCand.push_back(j);
        bool ok = false;
        for (int r : rowCand)
        {
            for (int c : colCand)
            {
                int inside = rowCount[r] + colCount[c] - (a[r][c] == mx);
                if (inside == tp)
                {
                    ok = true;
                    break;
                }
            }
            if (ok)
                break;
        }
        cout << (ok ? mx - 1 : mx) << '\n';
    }
}
