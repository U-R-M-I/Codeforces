#include <bits/stdc++.h>
using namespace std;
using ll = long long;
 
int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    int t;
    if (!(cin >> t)) return 0;
    while (t--) {
        int n;
        cin >> n;
        vector<ll> a(n+1, 0), P(n+1, 0), M(n+1, 0);
        P[0] = 0;
        M[0] = 0;
        a[1] = -1;
        P[1] = -1;
        M[1] = max(M[0], P[1]);
 
        for (int i = 2; i <= n; ++i) {
            ll Mprev = M[i-2];
 
            if ((i % 2) == 0) {
 
                ll need = Mprev - P[i-1] + 1;
                if (need < 1) need = 1;
                a[i] = need;
                P[i] = P[i-1] + a[i];
                M[i] = max(M[i-1], P[i]);
            } else {
 
                if (P[i-1] - 1 > Mprev) {
                    a[i] = -1;
                    P[i] = P[i-1] + a[i];
                    M[i] = max(M[i-1], P[i]);
                } else {
                    ll delta = (Mprev + 2) - P[i-1]; 
                    a[i-1] += delta;
                    P[i-1] += delta;
 
                    M[i-1] = max(M[i-2], P[i-1]);
                    a[i] = -1;
                    P[i] = P[i-1] + a[i];
                    M[i] = max(M[i-1], P[i]);
                }
            }
        }
        for (int i = 1; i <= n; ++i) {
            cout << a[i] << (i == n ? '\n' : ' ');
        }
    }
    return 0;
}
