#include <bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
template <typename T> using pbds = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;
using ll = long long;
#define sz(yo) (ll)yo.size()
 
void solve() {
   ll n, x;
   cin >> n >> x;
   multiset<ll, greater<ll>> ml;
   for (ll i = 0;i < n;i++) {
      ll in;
      cin >> in;
      ml.insert(in);
   }
 
   ll ans = 0;
   while (!ml.empty()) {
      ll value = *ml.begin(), cnt = 1;
      ml.erase(ml.begin());
      while (value * cnt < x && !ml.empty()) {
         cnt++;
         value = *ml.begin();
         ml.erase(ml.begin());
      }
      if (value * cnt >= x) {
         ans++;
      }
   }
 
   cout << ans << '\n';
}
 
int main() {
   ios::sync_with_stdio(false);
   cin.tie(nullptr);
 
   ll t;
   t = 1;
   cin >> t;
   for (ll cs = 1; cs <= t; cs++) {
      // cout << "Case " << cs << ": ";
      solve();
   }
   return 0;
}
